n = 1128982727377943751569772704253784414397168802543405636401272564060635993534809815650849258754769230661371254983750119891519109065318621337218098022377806341684454816214544482318600945882298412365214486154282749927823251308684108538792279678249028231042317018761810705075677536006469294367669982105160831646098205650127204340001541763883529198607374910298263730240408183692069976519351236262322198921801320013706083441216836124016350502936426431801909138027670143821743168686619219505343579021794176399744587723416290463432581806214726646611895525448228381629311070861216547792329296187556456636120772841604486483581804756962818588650129354661310881160931845927811716352492107122349498573058034468140328184179149304772622831677009506289347783876932834223154011153230433410914970443260203577408845899251669886180892258485851928609671341348693362908475392694912973081302919863231208374385006429257166881272637297531788615449891401386898722310328333261329130725146961078911131551266799458531441373271612221475005129405803843475524611105711229362387723003833403165300854658015625273915264481481716660498550603348598029061686511174735884447801674400129816305237092701559505229972710989721786172951053002225383709620931522694019025982355348967740315431715598926284874338322605470224047118521676214682299112844329752514890889265177465033501336702150692371831621144077392857199663851554587708081033278857602749910182264996923365687822469643414426963281496533923080665678788531498004112470498343837217750953160501517884567527551465969763164508306639529264153047614845167993130754190758907409062054663413706715407132336253764840388818893951769041869658530507448474823450717503834769465794997890143837149485001781274915280948192967910833377990959934440412664040589607149748080784228409206463336871309106939798452252129862379229493040497965195316086947220501438347726368854081262859375063532451758167447323741765649977124658690060821858391298997314039345889652489495203295755663818524252588510860722645389871633740868434423456292579971379084621948235977767007923758580593823692803057012466672997975822972209992000194402126500912771585333867414174445469851054897777020107157459807116405891355239220790962171120071664567670433477123952991641598273376448904370895960548480895131
e = 65537
c = 12293381643741165245581395863763765109152574488076922875780502433509632011768151856063263725224467167244948235129952440224336821080592674226265011135655978659294387027421977085929715451638905888221948202516815095709796335344528404434166588345828610353346866233964214730327587314429336410100389010177322004255459398318146235183358267355974259204299852394751523465279332816188403127065361539373835953273764169506840345344397481987004514104579265709929618331757282936154814587213514775677218431393722921340968116020671155640268686913299514853531714279701896923824023806716464811312703275961673053252089603704531014718828188055580616239721344082210968342559740016885908216066071474461440658897382766059758935261609559403412474606034967188025940039611074018477838447379982525176578099928058869818576370299389033330920395734592197527812993987562712911701922060220243595044754649973258581819383460214044860335109069318159542106059428815759967766075928617961674887827667852123083418782686578189798496013200405254423085202923324268005509927059429262825658345753237483064519551882126120418841764072708173913942291991654756924131977228625984760254784039708017894840509428309612465939033433304268262708254745639617531236782134978412991562451878786135955908414941165802175975113582221150662108988547568952295192509185805048565029542630402939311336586378538512094459356911586330459324895158754296117114097908106255380575745361070868843612306934736960181025094672698118365683564396495185154596901345717940743508737914562807875619037689413727335384722140791924196405832652300839210940156190751718164801858917535720098142098166273023804078885148180287526799708303246997627548103626355573240303071208613547605360490005811999627276814786184194030006254642494248149389768336155685637353568101254481348742964344661146214002831031741405635203232405833524201640974517850563479193501621356013933177900029335090004843917737734647186768624183502516018375064937626571659775957459641886735685331163890566642320053730855611123341993340635537944832734171284598075879306579814880342190736929570962134717735958313475932633740450678101825590114338603726551245744594771529589838100761967859449223106172742910855827326314304516566758229934523015344609893645776058429620661482042285184150317754443

# p = (a * (3**2048)) + (b * (3**1024)) + c
pa = (3**2048)*(3**2048)
pb = (3**1024)*(3**1024)

import gmpy2

a = n//pa
# print(a)
for i in range(1000000):
    ca = gmpy2.iroot(a-i, 2)
    if(ca[1]):
        print(ca[0])
        print(ca[0].bit_length())
        break